(ROOT (VP (VB import) (NP (NN library) (NN dataframe))) )
(ROOT (VP (VP (VB define) (NP (JJ variable) (NN cm))) (CC and) (VP (VB generate) (NP (NP (NN confusion)) (ADJP (JJ matrix) (PP (IN for) (NP (NN y_test))))) (PP (IN with) (NP (NNS predictions))))) )
(ROOT (VP (VP (VB define) (NP (JJ variable) (NN df))) (CC and) (VP (VB read) (NP (JJ dataset) (NNP DATASET) (NN csv) (NN file)))) )
(ROOT (VP (VP (VB define) (NP (JJ variable) (NN clf))) (CC and) (VP (VB classify) (NP (NNP X_train) (NN y_train)) (S (VP (VBG using) (NP (NNP KNN)))))) )
(ROOT (VP (VP (VB define) (NP (JJ variable) (NN target_class))) (CC and) (VP (VB assign) (NP (NN TARGET_CLASS)))) )
(ROOT (VP (VP (VB define) (NP (JJ variable) (NN split))) (CC and) (VP (VB assign) (NP (NN SPLIT_RATIO)))) )
(ROOT (VP (VP (VB define) (NP (NN array) (NNS features))) (CC and) (VP (VB assign) (NP (NN FEATURE_SET)))) )
(ROOT (VP (VP (VB split) (NP (JJ dataframe) (NX (NX (NN feature) (NN set)) (CC and) (NX (NN target) (NN class)))) (PP (IN by) (NP (NNP SPLIT_RATIO) (NN ratio)))) (CC and) (VP (VB assign) (PP (TO to) (NP (NNP X_train) (NNP X_test) (JJ y_train) (NN y_test))))) )
(ROOT (VP (VP (VB define) (NP (JJ variable) (NN cm))) (CC and) (VP (VB generate) (NP (NP (NN confusion)) (ADJP (JJ matrix) (PP (IN for) (NP (NN y_test))))) (PP (IN with) (NP (NNS predictions))))) )
